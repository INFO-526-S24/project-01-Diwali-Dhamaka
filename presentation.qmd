---
title: "Diwali Sales Trend Analysis"
subtitle: "INFO 526 - Fall 2023 - Project 1"
author: "Peter Yeh, Miki Katyal, Vidhyananth Sivashanmugam, Kondapaneni Siva Rohit, Anusha Nagaraja, Gowtham Theeda"
title-slide-attributes:
  data-background-image: images/diwali.jpg
  data-background-size: cover
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r}
#| label: load-packages
#| include: false

# Load packages here
pacman::p_load(dplyr,
               broom,
               ggplot2,
               scales,
               kableExtra)
```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

## Context

::: columns
::: {.column width="50%"}

![Image credit: Prem Bharti](images/1697434127639.jpg){fig-align="center" width="500" height="400"}

:::

::: {.column width="50%"}
-   Diwali festival is a paramount Indian festival

-   Comparable to the Christmas shopping period

-   Analyze transaction patterns and offer explanations
:::
:::

## Dataset Description

-   Diwali festival transactional data collected across years

-   Sourced from 2023 TidyTuesday data repository

-   Contains 13 variables and 11251 transactions

-   A customer can have multiple transactions

-   Variables utilized for the analysis include customer ID, age, age group,
gender, marital status, product category, order size, and amount spent

## Question 1: Motivation

For each product category, what is the largest customer group based on gender and marital status?

-   Motivation

## Question 1: Barplot

```{r}
#| label: question1-data-wrangling
#| warning: false
# Read in project data
diwali <- read.csv("data/diwali_sales_data.csv")

# Remove NA values
diwali <- diwali[-which(is.na(diwali$Amount)),]

# Recode marital status in case age value is illegal
diwali <- diwali |>
  mutate(
    Marital_Status = case_when(
      Age.Group == "0-17" ~ 0,
      Age < 21 & Gender =="M" ~ 0,
      TRUE ~ Marital_Status
    )
  )

# Modify dataset according to project analysis
diwali <- diwali |>
  mutate(
    # Refactorizes the product category based on similarity between products
    Product_Category = case_when(
      Product_Category %in% c("Footwear & Shoes") ~ "Clothing",
      Product_Category %in% c("Clothing & Apparel") ~ "Clothing",
      Product_Category %in% c("Books") ~ "Entertainment",
      Product_Category %in% c("Electronics & Gadgets") ~ "Entertainment",
      Product_Category %in% c("Games & Toys") ~ "Entertainment",
      Product_Category %in% c("Sports Products") ~ "Entertainment",
      Product_Category %in% c("Decor") ~ "Home",
      Product_Category %in% c("Furniture") ~ "Home",
      Product_Category %in% c("Hand & Power Tools") ~ "Home",
      Product_Category %in% c("Household items") ~ "Home",
      Product_Category %in% c("Tupperware") ~ "Home",
      Product_Category %in% c("Stationery") ~ "Office",
      Product_Category %in% c("Veterinary") ~ "Pet Care",
      TRUE ~ Product_Category
      ),
    
    # Refactorizes the marital status to detail the meaning
    Marital_Status = case_when(
      Marital_Status %in% 1 ~ "Married",
      Marital_Status %in% 0 ~ "Single"
    )
  )

diwali <- diwali[-which(diwali$Age.Group == "0-17"),]

# Check the number of product categories for refactor level
category_order <- as.data.frame(matrix(nrow = 8, ncol = 2))
category_order[,1] <- c("Auto", "Beauty", "Clothing", "Entertainment", "Food",
                    "Home", "Office", "Pet Care")
category_order[,2] <- as.integer(summary(as.factor(diwali$Product_Category)))
category_vector <- (category_order[order(category_order[,2]),1])

# Refactorizes the product category to sort the groups by count
diwali$Product_Category <- as.factor(diwali$Product_Category)
diwali$Product_Category <- factor(diwali$Product_Category,
                                  levels = category_vector)

# Sort Gender factor level
diwali$Gender <- factor(diwali$Gender, levels = c("M", "F"))

# Sort Marital_Status factor level
diwali$Marital_Status <- factor(diwali$Marital_Status,
                                levels = c("Single", "Married"))
```

```{r} 
#| label: question1-plot
#| warning: false
#| fig-align: "center"
#| fig-width: 12
# Bar plot showing the number of customers for product category across gender
# and marital status
ggplot(data = diwali, aes(y = Product_Category, fill = Gender)) +
  geom_bar(position = "dodge", width = 0.7) +
  scale_fill_manual(values = c("dodgerblue", "deeppink1")) +
  # Reorder legend to match the order of the bar plot
  guides(fill = guide_legend(reverse = TRUE)) +
  ggtitle("Total Count of Sale Type",
          "Across Marital Status and Gender") +
  facet_wrap(~Marital_Status, ncol = 1) +
  ylab("Product Category") +
  xlab("Counts") +
  theme(plot.title = element_text(size = 20),
        plot.subtitle = element_text(size = 15),
        axis.title = element_text(size = 20),
        axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.title = element_text(size = 20),
        legend.text = element_text(size = 15),
        strip.text = element_text(size = 15))
```

## Question 1: Boxplot

```{r}
#| label: question1-boxplot

# Check the average order price of product category
diwali_price <- diwali |>
  group_by(Product_Category) |>
  summarize("Price" = median(Amount/Orders))
diwali_price <- as.data.frame(diwali_price)
category_vector <- diwali_price[order(diwali_price[,2]),1]

# Refactorizes the product category to sort the groups by count
diwali$Product_Category <- factor(diwali$Product_Category,
                                  levels = rev(category_vector))

# Boxplot of average order values per category
ggplot(data = diwali,
       aes(x = Product_Category, y = Amount/Orders)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
  guides(fill = guide_legend(reverse = TRUE)) +
  ggtitle("Boxplot of Order Price",
          "Ordered by median order price") +
  xlab("Product Category") +
  ylab("Order Price (Rupee)")
```

## Question 2: Motivation

What is the total amount of rupee a customer spends, given their demographics, such as gender, age, and marital status?

-   Why this question?

## Question 2: Boxplot

```{r}
#| label: question2-data-wrangling
# Modify data for Q2
diwali.Q2 <- diwali |>
  group_by(User_ID, Age) |>
  summarize(
    "Gender" = first(Gender),
    "Age_Group" = first(Age.Group),
    "Marital_Status" = first(Marital_Status),
    "Total" = sum(Amount))

# Sort Gender factor level
diwali.Q2$Gender <- factor(diwali.Q2$Gender, levels = c("M", "F"))
```

```{r} 
#| label: question2-boxplot
#| warning: false
#| fig-align: "center"
#| fig-width: 15

# Boxplot to show customer spending within age group
ggplot(data = diwali.Q2,
       aes(x = Age_Group, y = Total, fill = Gender)) +
  geom_boxplot() +
  scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
  scale_fill_manual(values = c("dodgerblue", "deeppink1")) +
  coord_cartesian(ylim = c(0, 80000)) +
  facet_wrap(~Marital_Status, ncol = 2) +
  guides(fill = guide_legend(reverse = TRUE)) +
  ggtitle("Customer Spending Range", "By age group") +
  xlab("Age Group") +
  ylab("Customer Spending (Rupees)") +
  theme(plot.title = element_text(size = 20),
        plot.subtitle = element_text(size = 15),
        axis.title = element_text(size = 20),
        axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.title = element_text(size = 20),
        legend.text = element_text(size = 15),
        strip.text = element_text(size = 15))
```

## Question 2: Regression

```{r}
#| label: question2-plot
#| fig-align: "center"
#| fig-width: 12
 
# Plot Q2 data
ggplot(data = diwali.Q2, aes(x = Age, y = Total, color = Gender)) +
  geom_smooth(linewidth = 4)  +
  scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
  facet_wrap(~Marital_Status, ncol = 2) +
  scale_color_manual(values = c("dodgerblue", "deeppink1")) +
  guides(color = guide_legend(reverse = TRUE)) +
  ggtitle("Customer Spending Insights",
          "Across age and by gender and marital status") +
  ylab("Customer Spending (Rupees)") +
  theme(plot.title = element_text(size = 20),
        plot.subtitle = element_text(size = 15),
        axis.title = element_text(size = 20),
        axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.title = element_text(size = 20),
        legend.text = element_text(size = 15),
        strip.text = element_text(size = 15))
```

## Question 2: Linear Relationship Check
```{r}
#| label: question2-val
# Split data into two subsets
diwali_single <- diwali.Q2[which(diwali.Q2$Marital_Status == "Single" &
                               diwali.Q2$Gender == "M"),]

diwali_married <- diwali.Q2[which(diwali.Q2$Marital_Status == "Married" &
                               diwali.Q2$Gender == "M"),]

# Generate linear models
single_lm <- lm(Total~Age, data = diwali_single)
married_lm <- lm(Total~Age, data = diwali_married)

# Round values of tidy objects
tidy_single <- tidy(single_lm)
tidy_single[,2:ncol(tidy_single)] <- round(tidy_single[, 2:ncol(tidy_single)],
                                           2)
tidy_married <- tidy(married_lm)
tidy_married[,2:ncol(tidy_married)] <- round(tidy_married[, 2:ncol(tidy_married)],
                                             2)
# Generate a nice table with kable
single_table <- kable(tidy_single, "html") %>%
  kable_styling(full_width = FALSE)

# Generate a nice table with kable
married_table <- kable(tidy_married, "html") %>%
  kable_styling(full_width = FALSE)
```

Single Men

```{r}
#| label: question2-single
# Display the table
single_table
```

Married Men

```{r}
#| label: question2-married
# Display the table
married_table
```

## Limitations

-   Lack of transaction date data

-   Inconsistent occupation data within same year

-   No key to product ID

-   States is not pan-India

# Questions?

# Using Quarto for presentations

## Quarto

-   The presentation is created using the Quarto CLI

-   `##` sets the start of a new slide

## Layouts

You can use plain text

::: columns
::: {.column width="40%"}
-   or bullet points[^1]
:::

::: {.column width="60%"}
or in two columns
:::
:::

[^1]: And add footnotes

-   like

-   this

## Code

```{r, echo=FALSE}


```

## Plots

```{r}

```

## Plot and text

::: columns
::: {.column width="50%"}
-   Some text

-   goes here
:::

::: {.column width="50%"}

```{r, warning=FALSE, fig.width=5.5}

```
:::
:::

# A new section...

## Tables

If you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,

```{r}

```

## Images

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}

## Math Expressions {.smaller}

You can write LaTeX math expressions inside a pair of dollar signs, e.g. \$\\alpha+\\beta\$ renders $\alpha + \beta$. You can use the display style with double dollar signs:

```         
$$\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i$$
```

$$
\bar{X}=\frac{1}{n}\sum_{i=1}^nX_i
$$

Limitations:

1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;

2.  There should not be spaces after the opening `$` or before the closing `$`.

# Wrap up

## Feeling adventurous?

-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.

-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.
